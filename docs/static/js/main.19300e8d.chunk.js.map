{"version":3,"sources":["firebase/firebase-config.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRouter.js","routers/PublicRouter.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpdated","file","a","formData","FormData","append","fetch","method","body","res","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","setNotes","type","payload","activeNote","note","addNewNote","startSaveNote","dispatch","getSate","url","noteToFiresote","doc","update","refreshNote","Swal","fire","title","deleteNote","useForm","initialState","useState","values","setValues","handleInputChange","target","name","value","reset","newFormState","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","getState","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","onClick","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","src","alt","delete","NothingSelected","setError","err","finishLoading","startLoignEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","JournalEntry","date","noteDate","moment","handleEntryClick","backgroundSize","backgroundImage","format","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","autoComplete","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","ifFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","prototype","PropTypes","bool","isRequired","func","PublicRoute","AppRouter","cheking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.19300e8d.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n\n\n\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAIap1BmQ0G1efpsb80wmFkkOFHsszn9tM\",\n    authDomain: \"react-app-cursos-5460d.firebaseapp.com\",\n    databaseURL: \"https://react-app-cursos-5460d.firebaseio.com\",\n    projectId: \"react-app-cursos-5460d\",\n    storageBucket: \"react-app-cursos-5460d.appspot.com\",\n    messagingSenderId: \"871485082862\",\n    appId: \"1:871485082862:web:d3553806a3310e4b30f7ff\"\n  };\n\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  const db = firebase.firestore();\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\n  export {\n      db,\n      googleAuthProvider,\n      firebase\n  }","export const fileUpdated = async(file) => {\n    const cloudUrl = ' https://api.cloudinary.com/v1_1/dri6nu4m6/upload';\n\n    const formData = new FormData();\n\n    formData.append('upload_preset', 'react-journal');\n    formData.append('file', file);\n\n    try {\n        \n        const res = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData\n        })\n\n        if (res.ok) {\n            const cloudResp = await res.json();\n            return cloudResp.secure_url;\n        } else {\n            throw await res.json()\n        }\n\n\n    } catch (error) {\n        throw error;\n    }\n\n\n}","import { db } from \"../firebase/firebase-config\"\n\n\nexport const loadNotes = async (uid) => {\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n    \n    const notes = [];\n    \n    notesSnap.forEach( snapHijo => {\n        notes.push({\n            id: snapHijo.id,\n            ...snapHijo.data()\n        })\n    } )\n    \n    return notes\n}","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError : '[UI] Set Error',\n    uiRemoveError : '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew:'[Notes] New note',\n    notesActive:'[Notes] Set active note',\n    notesLoad:'[Notes] Load notes',\n    notesUpdated:'[Notes] Updated note',\n    notesFileUrl:'[Notes] Update image url',\n    notesDelete:'[Notes] Delete note',\n    notesLogoutCleaning:'[Notes] logout Cleaning'\n\n}","import Swal from \"sweetalert2\";\nimport { db } from \"../firebase/firebase-config\";\nimport { fileUpdated } from \"../helpers/fileUpload\";\nimport { loadNotes } from \"../helpers/loadNotes\";\nimport { types } from \"../types/types\";\n\n\nexport const startNewNote = () => {\n    return  async (dispatch, getState) => {\n\n        const { uid } = getState().auth;\n\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime()\n        };\n\n        const doc = await db.collection( `${uid}/journal/notes` ).add(newNote);\n\n\n        dispatch( activeNote(doc.id, newNote));\n        dispatch(addNewNote(doc.id, newNote))\n\n    }\n}\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid);\n        dispatch(setNotes(notes));\n    }\n}\n\nconst setNotes = (notes) => ({\n    type: types.notesLoad,\n    payload: notes\n})\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: {\n        id,\n        ...note\n    }\n})\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: {\n        id, ...note\n    }\n})\n\nexport const startSaveNote = (note) => {\n\n    return async(dispatch, getSate) => {\n\n        const {uid} = getSate().auth;\n\n        if(!note.url) {\n            delete note.url;\n        }\n\n        const noteToFiresote = { ...note };\n        delete noteToFiresote.id;\n\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFiresote);\n\n        dispatch(refreshNote(note.id, noteToFiresote));\n        Swal.fire('Saved', note.title, 'success');\n    \n    }\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: {\n        id, \n        note: {\n            id,\n            ...note\n        }\n    }\n})\n\nexport const startUploading = ( file ) => {\n    return async(dispatch, getState) =>{\n        const {active} = getState().notes;\n\n        Swal.fire({\n            title:'Uploading...',\n            text: 'Please wait...',\n            allowOutsideClick: false,\n            onBeforeOpen: () => {\n                Swal.showLoading();\n            }\n        });\n\n        const fileUrl = await fileUpdated( file );\n        active.url = fileUrl;\n\n        dispatch( startSaveNote( active ) );\n\n        Swal.close()\n\n    }\n}\n\nexport const startDeteling = ( id ) => {\n    return async(dispatch, getSate) => {\n\n        const uid = getSate().auth.uid;\n        await db.doc(`${uid}/jpurnal/notes/${id}`).delete();\n\n        dispatch(deleteNote(id));\n\n        Swal.fire('Deleted', 'Note Deleted', 'error')\n\n\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id\n})\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning,\n})","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n\n    const [values, setValues] = useState(initialState)\n\n    const handleInputChange = ({target}) => {\n        setValues({...values, [target.name] : target.value})\n    }\n\n    const reset = (newFormState = initialState) => {\n        setValues( newFormState );\n    }\n\n    return [values, handleInputChange, reset]\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUploading } from \"../../actions/notes\";\n\nexport const NotesAppBar = () => {\n    const dispatch = useDispatch();\n    const { active } = useSelector(state => state.notes);\n\n    const handleSave = () => {\n        dispatch(startSaveNote(active));\n    };\n\n    const handlePictureClick = () => {\n        document.querySelector('#fileSelectro').click();\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n\n        if ( file ) {\n            dispatch(startUploading( file) );\n        }\n    };\n\n    return (\n        <div className=\"note__appbar\">\n            <span>28 de Agosto 2020</span>\n\n            <input\n                type=\"file\"\n                style={{ display: \"none\" }}\n                name=\"files\"\n                onChange={handleFileChange}\n                id=\"fileSelectro\"\n            />\n\n            <div>\n                <button className=\"btn\" onClick={handlePictureClick}>\n                    picture\n                </button>\n\n                <button className=\"btn\" onClick={handleSave}>\n                    Save\n                </button>\n            </div>\n        </div>\n    );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { activeNote, startDeteling } from \"../../actions/notes\";\nimport { useForm } from \"../../hooks/useForm\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const { active } = useSelector(state => state.notes);\n\n    const [formValues, handleInputChange, reset] = useForm(active);\n\n    const { body, title, url } = formValues;\n\n    const activeId = useRef( active.id );\n\n    useEffect(() => {\n        \n        if(active.id !== activeId.current) {\n            reset(active);\n            activeId.current = active.id;\n        }\n\n    }, [active, reset]);\n\n    useEffect(() => {\n        \n        dispatch(activeNote(formValues.id, {...formValues}));\n\n    }, [formValues, dispatch])\n\n    const handleDetele = () => {\n\n        dispatch(startDeteling(active.id));\n\n    }\n\n    return (\n        <div className=\"note__main-content\">\n            <NotesAppBar />\n\n            <div className=\"note__content\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"note__title-input\"\n                    name=\"title\"\n                    value={title}\n                    onChange={handleInputChange}\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"note__textarea\"\n                    name=\"body\"\n                    value={body}\n                    onChange={handleInputChange}\n                ></textarea>\n\n                {url && (\n                    <div className=\"note__image\">\n                        <img src={url} alt=\"imagen\" />\n                    </div>\n                )}\n            </div>\n\n                    <button \n                        className=\"btn btn-danger\" \n                        onClick={ handleDetele }\n                    >\n                        Delete\n                    </button>\n\n        </div>\n    );\n};\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n\n                or create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const setError = err => ({\n    type: types.uiSetError,\n    payload: err\n});\n\nexport const removeError = () => ({\n    type: types.uiRemoveError,\n});\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading\n});\n\nexport const finishLoading = () => ({\n    type: types.uiFinishLoading\n});","import Swal from 'sweetalert2';\n\nimport { types } from \"../types/types\";\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\nimport { finishLoading, startLoading } from \"./ui\";\nimport { noteLogout } from './notes';\n\n\nexport const startLoignEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch( startLoading() );\n\n        firebase.auth().signInWithEmailAndPassword(email, password)\n            .then ( ({user}) =>  {\n                dispatch( login(user.uid, user.displayName) );\n                dispatch( finishLoading() );\n            } )\n            .catch ( (e) =>{\n                dispatch(finishLoading())\n                Swal.fire('Error', e.message, 'error')\n            })\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n\n    return (dispatch) => {\n\n        firebase.auth().createUserWithEmailAndPassword(email, password) \n            .then (async ({user}) => {\n                \n                await user.updateProfile({displayName: name});\n\n                dispatch (\n                    login(user.uid, user.displayName)\n                );\n\n            })\n            .catch( e => {\n                Swal.fire('Error', e.message, 'error')\n            })\n\n    }\n\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: {\n        uid,\n        displayName,\n    },\n});\n\nexport const startGoogleLogin = () => {\n\n    return (dispatch) => {\n\n        firebase.auth().signInWithPopup(googleAuthProvider)\n            .then( ({ user }) => {\n                dispatch(\n                    login( user.uid, user.displayName )\n                )\n            } )\n    }\n}\n\nexport const startLogout = () => {\n    return async(dispatch)  => {\n        await firebase.auth().signOut();\n\n        dispatch(logout())\n        dispatch(noteLogout())\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout\n})","import React from 'react'\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { activeNote } from '../../actions/notes';\n\nexport const JournalEntry = ({note}) => {\n\n    const dispatch = useDispatch()\n    \n    const handleEntryClick = (id,note) => {\n        dispatch(activeNote(id, note))\n    }\n    \n    const {id, title, body, date, url} = note;\n    \n    const noteDate = moment(date);\n\n    return (\n        <div \n            className=\"journal__entry pointer animate__animated animate__fadeIn animate_faster\"\n            onClick= { () => handleEntryClick(id, note) }\n        >\n            \n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: `url(${url})`\n                }}\n                \n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    {title}\n                </p>\n\n                <p className=\"journal__entry-content\">\n                    {body}\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const {notes} = useSelector(state => state.notes);\n\n\n    return (\n        <div className=\"journal__entries animate__animated animate__fadeIn animate_faster\">\n\n            {\n                notes.map(note => (\n                    <JournalEntry \n                        key={ note.id } \n                        note = {note}\n                    />\n                ))\n            }\n            \n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\nimport { startNewNote } from '../../actions/notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n\n    const {name} = useSelector(state => state.auth)\n\n    const dispatch = useDispatch();\n    \n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    const handleNewNote = () => {\n        dispatch(startNewNote());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> {name} </span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleLogout}    \n                > \n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"joutnal__new-entry pointer\"\n                onClick = { handleNewNote }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />\n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { NoteScreen } from '../notes/NoteScreen'\nimport { NothingSelected } from './NothingSelected'\nimport { Sidebar } from './Sidebar'\n\nexport const JournalScreen = () => {\n\n    const { active } = useSelector(state => state.notes)\n\n    return (\n        <div className=\"journal__main-container animate__animated animate__fadeIn animate_faster\">\n            <Sidebar />\n\n            <main>\n\n                {\n                    (active)\n                    ? ( <NoteScreen />)\n                    : (<NothingSelected />)\n                }\n\n\n               \n            </main>\n        </div>\n    )\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { startGoogleLogin, startLoignEmailPassword } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    const {loading} = useSelector(state => state.ui)\n\n    const [ values, handleInputChange ] = useForm({\n        email:'',\n        password: ''\n    });\n\n    const { email, password } = values;\n    \n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch( startLoignEmailPassword(email, password) )\n    };\n\n    const handleGoogleLogin = () => {\n        dispatch(startGoogleLogin());\n    }\n\n    return (\n        <>\n            <h3 className='auth__title mb-5'>Login</h3>\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn animate_faster\">\n\n                <input \n                    type='text'\n                    placeholder='email'\n                    name='email'  \n                    autoComplete='off'\n                    className=\"auth__input\"  \n                    value={ email }\n                    onChange={ handleInputChange }\n                />\n\n                <input \n                    type='password'\n                    placeholder='password'\n                    name='password' \n                    className=\"auth__input\"  \n                    value={ password } \n                    onChange={ handleInputChange }\n                />\n                \n                <button \n                    type='submit'\n                    disabled={ loading }\n                    className='btn btn-primary pointer btn-block'\n                >\n                    Login\n                </button>\n\n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n                </div>\n                \n                <div \n                    className=\"google-btn mb-5 \"\n                    onClick={ handleGoogleLogin }\n                >\n                    <div className=\"google-icon-wrapper\">\n                        <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                    </div>\n                    <p className=\"btn-text\">\n                        <b>Sign in with google</b>\n                    </p>\n                </div>\n\n                <Link \n                    to='/auth/register'\n                    className='link'\n                >\n                    Create new acount\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from \"react\";\nimport validator from \"validator\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { useForm } from \"../../hooks/useForm\";\nimport { removeError, setError } from \"../../actions/ui\";\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\n\nexport const RegisterScreen = () => {\n\n    const {msgError} = useSelector(state => state.ui);\n\n    const dispatch = useDispatch();\n\n    const [values, handleInputChange] = useForm({\n        name: '',\n        email: '',\n        password: '',\n        password2: '',\n    });\n\n    const { name, email, password, password2 } = values;\n\n    const handleRegister = e => {\n        e.preventDefault();\n        if (ifFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\n        }\n    };\n\n    const ifFormValid = () => {\n\n        if (name.trim().length === 0 || !name) {\n            dispatch(setError('name is required'));\n            return false\n        } else if ( !validator.isEmail( email ) ) {\n            dispatch(setError('email is required'));\n            return false\n        } else if (password !== password2 || password.length < 5) {\n            dispatch(setError('password should be at least 5 characters and match'));\n            return false\n        }\n\n        dispatch(removeError());\n        return true\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title mb-5\">Register</h3>\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate_faster\">\n\n\n                {\n                    msgError && \n                    (\n                        <div className='auth__alert-error'> \n                            <p>{msgError}</p>\n                        </div>\n                    )\n                }\n\n\n                <input\n                    type=\"text\"\n                    placeholder=\"name\"\n                    name=\"name\"\n                    value={name}\n                    onChange={handleInputChange}\n                    autoComplete=\"off\"\n                    className=\"auth__input\"\n                />\n\n                <input\n                    type=\"text\"\n                    placeholder=\"email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={handleInputChange}\n                    autoComplete=\"off\"\n                    className=\"auth__input\"\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={handleInputChange}\n                    className=\"auth__input\"\n                />\n\n                <input\n                    type=\"password\"\n                    placeholder=\"confirm password\"\n                    name=\"password2\"\n                    value={password2}\n                    onChange={handleInputChange}\n                    className=\"auth__input\"\n                />\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary pointer btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n                <Link to=\"/auth/login\" className=\"link \">\n                    Alredy register?\n                </Link>\n            </form>\n        </>\n    );\n};\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { LoginScreen }from '../components/auth/LoginScreen'\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className='auth__box-container'>\n                <Switch>\n                    <Route exact path='/auth/login' component={ LoginScreen } />\n\n                    <Route exact path='/auth/register' component={ RegisterScreen } />\n\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return(\n        <Route {...rest} \n\n            component = { ( props ) => (\n                (isAuthenticated)\n                    ? ( <Component {...props} />)\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        />\n    )  \n}\n\nPrivateRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n    return(\n        <Route {...rest} \n        \n         component = { ( props ) => (\n                (isAuthenticated)\n                    ? (<Redirect to=\"/\" />)\n                    : (<Component {...props} />)\n            ) }\n        />\n    )\n\n}\n\nPublicRoute.prototype = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n    BrowserRouter as Router,\n    Redirect,\n    Switch,\n} from \"react-router-dom\";\nimport { firebase } from \"../firebase/firebase-config\";\n\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { login } from \"../actions/auth\";\nimport { PrivateRoute } from \"./PrivateRouter\";\nimport { PublicRoute } from \"./PublicRouter\";\nimport { startLoadingNotes } from \"../actions/notes\";\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n\n    const [cheking, setCheking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName));\n                setIsLoggedIn(true);\n\n\n                dispatch( startLoadingNotes(user.uid) );\n\n            } else {\n                setIsLoggedIn(false);\n            }\n\n            setCheking(false);\n        });\n    }, [dispatch, setCheking, setIsLoggedIn]);\n\n    if (cheking) {\n        return <h1> Espere... </h1>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute\n                        path=\"/auth\" \n                        component={AuthRouter} \n                        isAuthenticated={ isLoggedIn } \n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={JournalScreen} \n                        isAuthenticated={ isLoggedIn }    \n                    />\n\n                    <Redirect to=\"/auth/login\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import { types } from \"../types/types\"\n\n\nconst initialState = {\n    notes: [],\n    active: null\n}\n\nexport const notesReducer = (state = initialState, action) => {\n    switch(action.type){\n\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload\n                }\n            }\n        \n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [ ...action.payload ]\n            }\n\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map(\n                    note => note.id === action.payload.id\n                    ? action.payload.note\n                    : note\n                )\n            }\n\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter(\n                    note => note.id !== action.payload\n                )\n            }\n        \n        case types.notesLogoutCleaning:\n            return {\n                ...state,\n                active: null,\n                notes: []\n            }\n\n        default:\n            return state\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    loading: false,\n    msgError: null\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case (types.uiSetError):\n            return {\n                ...state,\n                msgError: action.payload\n            }\n        case (types.uiRemoveError):\n            return{\n                ...state,\n                msgError: null\n            }\n        case (types.uiStartLoading):\n            return{\n                ...state,\n                loading: true\n            };\n            case (types.uiFinishLoading):\n                return{\n                    ...state,\n                    loading: false\n                }\n        default:\n            return state\n    }\n}","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from '../reducers/authReducer';\nimport { notesReducer } from '../reducers/notesReducer';\nimport { uiReducer } from '../reducers/uiReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer, \n    notes: notesReducer\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import { types } from \"../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return{\n                uid: action.payload.uid,\n                name: action.payload.displayName\n            }\n\n            case types.logout:\n                return{ }\n                \n    \n        default:\n            return state;\n    }\n}","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <div>\n            <Provider store={store}>\n                <AppRouter />\n            </Provider>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}